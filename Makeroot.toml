#
# Copyright 2024 Tabs Data Inc.
#

env_files = [
    { path = "${HOME}/.tabsdata-dev/test.env", defaults_only = true },
    { path = "${HOME}/.tabsdata-dev/make.env", defaults_only = true },

    { path = "./make/settings/product.env", defaults_only = true },
    { path = "./make/settings/output.env", defaults_only = true },
    { path = "./make/settings/makers.env", defaults_only = true },
    { path = "./make/settings/toolchain.env", defaults_only = true },
]

extend = [
    { path = "./make/fragments/scripts/environment.toml" },

    { path = "./make/fragments/hooks/splash.toml" },
    { path = "./make/fragments/hooks/init.toml" },
    { path = "./make/fragments/hooks/end.toml" },
    { path = "./make/fragments/hooks/error.toml" },

    { path = "./make/fragments/aliases/default.toml" },
]

[env]
MAKE_SUCCESS = true
ECHO_ENV_FILES = true

CLEAN = "${clean:false}"
PROFILE = "${profile:dev}"

PROJECT_TABSDATA_ROOT_FOLDER = { value = "${ROOT_PROJECT_TABSDATA_FOLDER}/", normalize = true }
PROJECT_RS_TD_MACROS_FOLDER = { value = "${ROOT_PROJECT_TABSDATA_FOLDER}/macros/", normalize = true }
PROJECT_RS_TY_EXPANSIONS_FOLDER = { value = "${ROOT_PROJECT_TABSDATA_FOLDER}/expansions/polars/", normalize = true }
PROJECT_PY_TA_FEATURES_FOLDER = { value = "${ROOT_PROJECT_TABSDATA_FOLDER}/client/td-lib/ta_features/", normalize = true }
PROJECT_PY_TA_TABLEFRAME_FOLDER = { value = "${ROOT_PROJECT_TABSDATA_FOLDER}/client/td-lib/ta_tableframe/", normalize = true }
PROJECT_PY_TE_TABLEFRAME_FOLDER = { value = "${ROOT_PROJECT_TABSDATA_FOLDER}/extensions/python/td-lib/te_tableframe/", normalize = true }
PROJECT_PY_TD_SDK_FOLDER = { value = "${ROOT_PROJECT_TABSDATA_FOLDER}/client/td-sdk/", normalize = true }
PROJECT_PY_TABSDATA_SALESFORCE_FOLDER = { value = "${ROOT_PROJECT_TABSDATA_FOLDER}/connectors/python/tabsdata_salesforce/", normalize = true }
PROJECT_PY_TABSDATA_MONGODB_FOLDER = { value = "${ROOT_PROJECT_TABSDATA_FOLDER}/connectors/python/tabsdata_mongodb/", normalize = true }

PROJECT_RS_TABSDATA_CARGO_TOML = { value = "${ROOT_PROJECT_TABSDATA_FOLDER}/Cargo.toml", normalize = true }
PROJECT_RS_TD_MACROS_CARGO_TOML = { value = "${ROOT_PROJECT_TABSDATA_FOLDER}/macros/Cargo.toml", normalize = true }
PROJECT_RS_TY_EXPANSIONS_CARGO_TOML = { value = "${ROOT_PROJECT_TABSDATA_FOLDER}/expansions/polars/Cargo.toml", normalize = true }

BOOK_DEVELOPER_GUIDE_FOLDER = { value = "${ROOT_PROJECT_TABSDATA_FOLDER}/books/dguide", normalize = true }

TESTS_PY_TA_FEATURES_FOLDER = { value = "tests_ta_features/", normalize = true }
TESTS_PY_TA_TABLEFRAME_FOLDER = { value = "tests_ta_tableframe/", normalize = true }
TESTS_PY_TE_TABLEFRAME_FOLDER = { value = "tests_te_tableframe/", normalize = true }
TESTS_PY_TABSDATA_FOLDER = { value = "tests_tabsdata/", normalize = true }
TESTS_PY_TABSDATA_SALESFORCE_FOLDER = { value = "tests_tabsdata_salesforce/", normalize = true }
TESTS_PY_TABSDATA_MONGODB_FOLDER = { value = "tests_tabsdata_mongodb/", normalize = true }

RUST_DOCS = { value = "${ROOT_PROJECT_TABSDATA_FOLDER}/target/doc/tabsdatalib/index.html", normalize = true }
PYTHON_DOCS = { value = "${ROOT_PROJECT_TABSDATA_FOLDER}/client/td-sdk/site/index.html", normalize = true }

AUDIT_TOML = { value = "${ROOT_PROJECT_TABSDATA_FOLDER}/.cargo/audit.toml", normalize = true }
CLIPPY_CONF_DIR = { value = "${ROOT_PROJECT_TABSDATA_FOLDER}/.cargo", normalize = true }
DENY_TOML = { value = "${ROOT_PROJECT_TABSDATA_FOLDER}/.cargo/deny.toml", normalize = true }
PANTS_JSON = { value = "${ROOT_PROJECT_TABSDATA_FOLDER}/.cargo/pants.json", normalize = true }

SWAGGER_UI_OVERWRITE_FOLDER = { value = "${ROOT_PROJECT_TABSDATA_FOLDER}/server/binaries/td-server/resources/swagger", normalize = true }

MAKE_LIBRARIES_PATH = { value = "${ROOT_PROJECT_TABSDATA_FOLDER}/make/libraries", normalize = true }

BUMP_VERSION_PY = { value = "${ROOT_PROJECT_TABSDATA_FOLDER}/devutils/automation/tasks/makers/td-scripts/bump_version.py", normalize = true }
CLEAN_PY = { value = "${ROOT_PROJECT_TABSDATA_FOLDER}/devutils/automation/tasks/makers/td-scripts/clean.py", normalize = true }
COPY_ASSETS_PY = { value = "${ROOT_PROJECT_TABSDATA_FOLDER}/devutils/automation/tasks/makers/td-scripts/copy_assets.py", normalize = true }

VIRTUAL_PIP = { value = "${ROOT_PROJECT_TABSDATA_FOLDER}/client/td-sdk/.venv/bin/pip", normalize = true }
VIRTUAL_ACTIVATE = { value = "${ROOT_PROJECT_TABSDATA_FOLDER}/client/td-sdk/.venv/bin/activate", normalize = true }

[config]
load_script = [
    '''
    #!@duckscript

    echo_env_files = get_env ECHO_ENV_FILES

    LOCAL_ROOT = pwd

    ok_make_env = is_path_exists ${HOME}/.tabsdata-dev/make.env
    if ${ok_make_env}
        if eq ${echo_env_files} "true"
            echo "ðŸ“Ž File ${HOME}/.tabsdata-dev/make.env alredy exists"
        end
    else
        if eq ${echo_env_files} "true"
            echo "ðŸ’ˆ Copying ${LOCAL_ROOT}/.custom/make-dev.env to ${HOME}/.tabsdata-dev/make.env"
        end
        cp ${LOCAL_ROOT}/.custom/make-dev.env ${HOME}/.tabsdata-dev/make.env
    end

    ok_test_env = is_path_exists ${HOME}/.tabsdata-dev/test.env
    if ${ok_test_env}
        if eq ${echo_env_files} "true"
            echo "ðŸ“Ž File ${HOME}/.tabsdata-dev/test.env alredy exists"
        end
    else
        if eq ${echo_env_files} "true"
            echo "ðŸ’ˆ Copying ${LOCAL_ROOT}/.custom/test-dev.env to ${HOME}/.tabsdata-dev/test.env"
        end
        cp ${LOCAL_ROOT}/.custom/test-dev.env ${HOME}/.tabsdata-dev/test.env
    end

    if eq ${echo_env_files} "true"
        echo "ðŸŽˆ This build is using the following environment variables files:"
        echo "   - ðŸª¬ ${HOME}/.tabsdata-dev/test.env"
        echo "   - ðŸª¬ ${HOME}/.tabsdata-dev/make.env"
        files = glob_array ${LOCAL_ROOT}/make/settings/*.env
        for file in ${files}
            echo "   - ðŸª¬ ${file}"
        end
    end

    set_env ECHO_ENV_FILES "false"
    ''']
skip_core_tasks = true
skip_rust_env_info = true
skip_crate_env_info = true
reduce_output = false
init_task = "setup"
end_task = "teardown"
on_error_task = "failure"
#
# Copyright 2024 Tabs Data Inc.
#

## Linux @ arm_64-unknown-linux-musl
name: Release Standard Linux (arm-64)

on:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUST_LOG: "error"
  RUSTDOC_LOG: "error"
  RUST_TEST_THREADS: 16

defaults:
  run:
    shell: bash
    working-directory: .

jobs:
  release-standard-linux-arm-64:
    runs-on: release-linux-arm-64
    permissions: write-all
    defaults:
      run:
        shell: bash
        working-directory: .

    env:
      rust-channel: stable
      rust-target: aarch64-unknown-linux-gnu
      rust-toolchain: stable-aarch64-unknown-linux-gnu
      td-channel: stable
      td-target: aarch64-unknown-linux-musl
      td-toolchain: ""
      td-cross: true
      rust-profile: assembly
      python-version: "3.12"
      MARKERS: "not oracle"
      PYTEST_MAXIMUM_RETRY_COUNT: 17
      PYTHONIOENCODING: "utf-8"

    steps:
      - name: Configure git symlinks
        id: configure-gut-symlinks
        run: git config --global core.symlinks true

      - name: Checkout code - tabsdata standard
        id: checkout-code-tabsdata-standard
        uses: actions/checkout@v4

      - name: Check current folder
        id: check-current-folder
        run: |
          pwd
          ls -lah

      - name: Set up aws credentials
        id: setup-aws-credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.TRANSPORTER_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.TRANSPORTER_AWS_SECRET_ACCESS_KEY }}
        run: aws s3 ls

      - name: Set up azure credentials
        id: setup-azure-credentials
        env:
          TRANSPORTER_AZURE_ACCOUNT_KEY: ${{ secrets.TRANSPORTER_AZURE_ACCOUNT_KEY }}
          TRANSPORTER_AZURE_ACCOUNT_NAME: ${{ secrets.TRANSPORTER_AZURE_ACCOUNT_NAME }}
        run: az storage blob list -c tabsdataci --account-key $TRANSPORTER_AZURE_ACCOUNT_KEY --account-name $TRANSPORTER_AZURE_ACCOUNT_NAME

      - name: Setup
        id: setup
        uses: ./.github/actions/setup
        with:
          rust-channel: ${{ env.rust-channel }}
          rust-target: ${{ env.rust-target }}
          rust-toolchain: ${{ env.rust-toolchain }}
          td-channel: ${{ env.td-channel }}
          td-target: ${{ env.td-target }}
          td-toolchain: ${{ env.td-toolchain }}
          td-cross: ${{ env.td-cross }}

      - name: Clean
        id: clean
        run: cargo make clean

      - name: Build (rust)
        id: build-rust
        run: cargo make --time-summary --env profile=${{ env.rust-profile }} --env td-toolchain=${{ env.td-toolchain }} --env td-target=${{ env.td-target }} --env td-cross=${{ env.td-cross }} build_rs

      - name: Build (python)
        id: build-python
        run: cargo make --time-summary --env profile=${{ env.rust-profile }} --env td-toolchain=${{ env.td-toolchain }} --env td-target=${{ env.td-target }} --env td-cross=${{ env.td-cross }} build_py

      - name: Check - check  (rust)
        id: check-check-rust
        if: '!cancelled()'
        run: cargo make --time-summary --env profile=${{ env.rust-profile }} --env td-toolchain=${{ env.td-toolchain }} --env td-target=${{ env.td-target }} --env td-cross=${{ env.td-cross }} check_rs

      - name: Check - fmt  (rust)
        id: check-fmt-rust
        if: '!cancelled()'
        run: cargo make --time-summary --env profile=${{ env.rust-profile }} --env td-toolchain=${{ env.td-toolchain }} --env td-target=${{ env.td-target }} --env td-cross=${{ env.td-cross }} fmt_rs

      - name: Check - license  (rust)
        id: check-license-rust
        if: '!cancelled()'
        run: cargo make --time-summary --env profile=${{ env.rust-profile }} --env td-toolchain=${{ env.td-toolchain }} --env td-target=${{ env.td-target }} --env td-cross=${{ env.td-cross }} license_rs

      - name: Check - upgrade  (rust)
        id: check-upgrade-rust
        if: '!cancelled()'
        run: cargo make --time-summary --env profile=${{ env.rust-profile }} --env td-toolchain=${{ env.td-toolchain }} --env td-target=${{ env.td-target }} --env td-cross=${{ env.td-cross }} upgrade_rs

      - name: Check - deny  (rust)
        id: check-deny-rust
        if: '!cancelled()'
        run: cargo make --time-summary --env profile=${{ env.rust-profile }} --env td-toolchain=${{ env.td-toolchain }} --env td-target=${{ env.td-target }} --env td-cross=${{ env.td-cross }} deny_rs

      - name: Check - audit  (rust)
        id: check-audit-rust
        if: '!cancelled()'
        run: cargo make --time-summary --env profile=${{ env.rust-profile }} --env td-toolchain=${{ env.td-toolchain }} --env td-target=${{ env.td-target }} --env td-cross=${{ env.td-cross }} audit_rs

      - name: Check - pants  (rust)
        id: check-pants-rust
        if: '!cancelled()'
        run: cargo make --time-summary --env profile=${{ env.rust-profile }} --env td-toolchain=${{ env.td-toolchain }} --env td-target=${{ env.td-target }} --env td-cross=${{ env.td-cross }} pants_rs

      - name: Check - machete  (rust)
        id: check-machete-rust
        if: '!cancelled()'
        run: cargo make --time-summary --env profile=${{ env.rust-profile }} --env td-toolchain=${{ env.td-toolchain }} --env td-target=${{ env.td-target }} --env td-cross=${{ env.td-cross }} machete_rs

      - name: Check - clippy  (rust)
        id: check-clippy-rust
        if: '!cancelled()'
        run: cargo make --time-summary --env profile=${{ env.rust-profile }} --env td-toolchain=${{ env.td-toolchain }} --env td-target=${{ env.td-target }} --env td-cross=${{ env.td-cross }} clippy_rs

      - name: Check - check (python)
        id: check-check-python
        if: '!cancelled()'
        run: cargo make --time-summary --env profile=${{ env.rust-profile }} --env td-toolchain=${{ env.td-toolchain }} --env td-target=${{ env.td-target }} --env td-cross=${{ env.td-cross }} check_py

      - name: Check - fmt (python)
        id: check-fmt-python
        if: '!cancelled()'
        run: cargo make --time-summary --env profile=${{ env.rust-profile }} --env td-toolchain=${{ env.td-toolchain }} --env td-target=${{ env.td-target }} --env td-cross=${{ env.td-cross }} fmt_py

      - name: Check - license (python)
        id: check-license-python
        if: '!cancelled()'
        run: cargo make --time-summary --env profile=${{ env.rust-profile }} --env td-toolchain=${{ env.td-toolchain }} --env td-target=${{ env.td-target }} --env td-cross=${{ env.td-cross }} license_py

      - name: Check - upgrade (python)
        id: check-upgrade-python
        if: '!cancelled()'
        run: cargo make --time-summary --env profile=${{ env.rust-profile }} --env td-toolchain=${{ env.td-toolchain }} --env td-target=${{ env.td-target }} --env td-cross=${{ env.td-cross }} upgrade_py

      - name: Check - deny (python)
        id: check-deny-python
        if: '!cancelled()'
        run: cargo make --time-summary --env profile=${{ env.rust-profile }} --env td-toolchain=${{ env.td-toolchain }} --env td-target=${{ env.td-target }} --env td-cross=${{ env.td-cross }} deny_py

      - name: Check - audit (python)
        id: check-audit-python
        if: '!cancelled()'
        run: cargo make --time-summary --env profile=${{ env.rust-profile }} --env td-toolchain=${{ env.td-toolchain }} --env td-target=${{ env.td-target }} --env td-cross=${{ env.td-cross }} audit_py

      - name: Check - pants (python)
        id: check-pants-python
        if: '!cancelled()'
        run: cargo make --time-summary --env profile=${{ env.rust-profile }} --env td-toolchain=${{ env.td-toolchain }} --env td-target=${{ env.td-target }} --env td-cross=${{ env.td-cross }} pants_py

      - name: Check - machete (python)
        id: check-machete-python
        if: '!cancelled()'
        run: cargo make --time-summary --env profile=${{ env.rust-profile }} --env td-toolchain=${{ env.td-toolchain }} --env td-target=${{ env.td-target }} --env td-cross=${{ env.td-cross }} machete_py

      - name: Check - clippy (python)
        id: check-clippy-python
        if: '!cancelled()'
        run: cargo make --time-summary --env profile=${{ env.rust-profile }} --env td-toolchain=${{ env.td-toolchain }} --env td-target=${{ env.td-target }} --env td-cross=${{ env.td-cross }} clippy_py

      - name: Test (rust)
        id: test-rust
        if: '!cancelled()'
        run: cargo make --time-summary --env profile=${{ env.rust-profile }} --env td-toolchain=${{ env.td-toolchain }} --env td-target=${{ env.td-target }} --env td-cross=${{ env.td-cross }} test_rs

      - name: Test (python)
        id: test-python
        if: '!cancelled()'
        env:
          TRANSPORTER_AWS_ACCESS_KEY_ID: ${{ secrets.TRANSPORTER_AWS_ACCESS_KEY_ID }}
          TRANSPORTER_AWS_SECRET_ACCESS_KEY: ${{ secrets.TRANSPORTER_AWS_SECRET_ACCESS_KEY }}
          TRANSPORTER_AZURE_ACCOUNT_KEY: ${{ secrets.TRANSPORTER_AZURE_ACCOUNT_KEY }}
          TRANSPORTER_AZURE_ACCOUNT_NAME: ${{ secrets.TRANSPORTER_AZURE_ACCOUNT_NAME }}
        run: cargo make --time-summary --env profile=${{ env.rust-profile }} --env td-toolchain=${{ env.td-toolchain }} --env td-target=${{ env.td-target }} --env td-cross=${{ env.td-cross }} test_py

      - name: Assemble tabsdata wheel
        id: assemble-tabsdata-wheel
        env:
          REQUIRE_SERVER_BINARIES: true
          REQUIRE_THIRD_PARTY: true
        run: cargo make --time-summary --env profile=${{ env.rust-profile }} --env td-toolchain=${{ env.td-toolchain }} --env td-target=${{ env.td-target }} --env td-cross=${{ env.td-cross }} assembly

      - name: Install tabsdata wheel
        id: install-tabsdata-wheel
        run: cargo make --time-summary --env profile=${{ env.rust-profile }} --env td-toolchain=${{ env.td-toolchain }} --env td-target=${{ env.td-target }} --env td-cross=${{ env.td-cross }} install

      - name: Test examples
        id: test-examples
        if: 'false'
        run: cargo make --time-summary --env profile=${{ env.rust-profile }} --env td-toolchain=${{ env.td-toolchain }} --env td-target=${{ env.td-target }} --env td-cross=${{ env.td-cross }} examples

      - name: Create environment logs artifact
        id: crate-environment-logs-artifact
        if: 'failure() && !cancelled()'
        run: |
          SOURCE_FOLDER="$HOME/.tabsdata/instances/pytest"
          TARGET_ARCHIVE="./target/env_logs.tar.gz"
          find -L "$SOURCE_FOLDER" -type f -name '*.log'
          find -L "$SOURCE_FOLDER" -type f -name '*.log' -print0 | tar --null --files-from=- -czvf "$TARGET_ARCHIVE"
          echo "Environment logs artifact created: $TARGET_ARCHIVE"

      - name: Publish environment logs artifact
        id: publish-environment-logs-artifact
        if: 'failure() && !cancelled()'
        uses: actions/upload-artifact@v4.4.3
        with:
          name: env_logs
          path: ./target/env_logs.tar.gz

      - name: Create test logs artifact
        id: crate-test-logs-artifact
        if: 'failure() && !cancelled()'
        run: |
          SOURCE_FOLDER="."
          TARGET_ARCHIVE="./target/test_logs.tar.gz"
          find -L "$SOURCE_FOLDER" -type f -name '*.log'
          find -L "$SOURCE_FOLDER" -type f -name '*.log' -print0 | tar --null --files-from=- -czvf "$TARGET_ARCHIVE"
          echo "Test logs artifact created: $TARGET_ARCHIVE"

      - name: Publish test logs artifact
        id: publish-test-logs-artifact
        if: 'failure() && !cancelled()'
        uses: actions/upload-artifact@v4.4.3
        with:
          name: test_logs
          path: ./target/test_logs.tar.gz

      - name: Create tabsdata wheel artifact
        id: crate-tabsdata-wheel-artifact
        run: |
          SOURCE_FOLDER="./target/python/dist"
          TARGET_ARCHIVE="./target/tabsdata.tar.gz"
          find -L "$SOURCE_FOLDER" -type f -name 'tabsdata*.whl' -print0 | tar --null --files-from=- -czvf "$TARGET_ARCHIVE"
          echo "Wheel artifact created: $TARGET_ARCHIVE"

      - name: Publish tabsdata wheel artifact
        id: publish-tabsdata-wheel-artifact
        uses: actions/upload-artifact@v4.4.3
        with:
          name: tabsdata
          path: ./target/tabsdata.tar.gz

      - name: Teardown
        id: action-teardown
        uses: ./.github/actions/teardown

      - name: Notification
        id: action-notification
        uses: ./.github/actions/notification
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
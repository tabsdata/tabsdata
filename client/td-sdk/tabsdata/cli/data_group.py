#
# Copyright 2025 Tabs Data Inc.
#


import rich_click as click
from rich.console import Console
from rich.table import Table

from tabsdata.cli.cli_utils import logical_prompt, verify_login_or_prompt


@click.group()
@click.pass_context
def data(ctx: click.Context):
    """Data management commands"""
    verify_login_or_prompt(ctx)


@data.command()
@click.option(
    "--collection",
    "-c",
    help="Name of the collection to which the data belongs.",
)
@click.option(
    "--function",
    help="The name of the function to which the data belongs.",
)
@click.pass_context
def versions(ctx: click.Context, collection: str, function: str):
    """
    List all versions of the data generated by a function.
    """
    collection = collection or logical_prompt(
        ctx, "Name of the collection to which the data belongs"
    )
    function = function or logical_prompt(
        ctx, "The name of the function to which the data belongs"
    )
    try:
        data_version_list = ctx.obj["tabsdataserver"].dataversion_list(
            collection, function
        )

        table = Table(title=f"Data versions for function '{function}'")
        table.add_column("ID", style="cyan", no_wrap=True)
        table.add_column("Function ID")
        table.add_column("Execution plan ID")
        table.add_column("Triggered on")
        table.add_column("Status")

        for data_version in data_version_list:
            table.add_row(
                data_version.id,
                data_version.function_id,
                data_version.execution_plan_id,
                data_version.triggered_on_str,
                data_version.status,
            )

        click.echo()
        console = Console()
        console.print(table)
        click.echo(f"Number of data versions: {len(data_version_list)}")

    except Exception as e:
        raise click.ClickException(f"Failed to list data versions: {e}")

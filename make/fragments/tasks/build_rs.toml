#
# Copyright 2025 Tabs Data Inc.
#

[tasks.build_rs]
category = "03 - Build"
description = "Task 'build' for Rust projects"
run_task = [
    { name = [
        "build_all_rs",
        "build_none_rs"], condition = { env = { "TD_BUILD_ALL" = "true" } } },
    { name = [
        "build_none_rs"
    ] }
]

[tasks.build_expnasions_rs]
category = "03 - Build"
private = true
description = "Build and link the PyO3-Polars projects"
run_task = [
    { name = [
        "build_all_rs_expansions",
        "build_none_rs_expansions"], condition = { env = { "TD_BUILD_ALL" = "true" } } },
    { name = [
        "build_none_rs_expansions"
    ] }
]

[tasks.build_all_rs]
category = "03 - Build"
private = true
run_task = [
    { name = [
        "build_all_rs_macros",
        "build_all_rs_modules",
        "build_all_rs_expansions"
    ] }
]

[tasks.build_all_rs_macros]
category = "03 - Build"
private = true
cwd = "${PROJECT_TABSDATA_ROOT_FOLDER}"
script_runner = "@duckscript"
script = [
    '''
    !include_files ./make/libraries/log.ds

    debug "üöÄ ${td-cargo} %{td-toolchain-token}%{td-toolchain} build --locked %{td-target-token} %{td-target} --profile ${td-profile} --workspace --manifest-path ${PROJECT_RS_TD_MACROS_CARGO_TOML} --all-features --lib --bins --examples"
    exec --fail-on-error ${td-cargo} %{td-toolchain-token}%{td-toolchain} build --locked %{td-target-token} %{td-target} --profile ${td-profile} --workspace --manifest-path ${PROJECT_RS_TD_MACROS_CARGO_TOML} --all-features --lib --bins --examples
    ''']

[tasks.build_all_rs_modules]
category = "03 - Build"
private = true
cwd = "${PROJECT_TABSDATA_ROOT_FOLDER}"
script_runner = "@duckscript"
script = [
    '''
    !include_files ./make/libraries/log.ds

    debug "üöÄ ${td-cargo} %{td-toolchain-token}%{td-toolchain} build --locked %{td-target-token} %{td-target} --profile ${td-profile} --workspace --manifest-path ${PROJECT_RS_TABSDATA_CARGO_TOML} --all-features --lib --bins --examples"
    exec --fail-on-error ${td-cargo} %{td-toolchain-token}%{td-toolchain} build --locked %{td-target-token} %{td-target} --profile ${td-profile} --workspace --manifest-path ${PROJECT_RS_TABSDATA_CARGO_TOML} --all-features --lib --bins --examples
    ''']

[tasks.build_all_rs_expansions]
category = "03 - Build"
private = true
run_task = [
    { name = [
        "clean_rs_expansions",
        "compile_all_rs_expansions",
        "link_all_rs_expansions"
    ] }
]

[tasks.compile_all_rs_expansions]
category = "03 - Build"
private = true
cwd = "${PROJECT_TABSDATA_ROOT_FOLDER}"
script_runner = "@duckscript"
script = [
    '''
    !include_files ./make/libraries/log.ds

    debug "üöÄ cargo %{td-toolchain-token}%{td-toolchain} build --locked --profile ${td-profile} --workspace --manifest-path ${PROJECT_RS_TY_EXPANSIONS_CARGO_TOML} --lib --bins --examples"
    exec --fail-on-error cargo %{td-toolchain-token}%{td-toolchain} build --locked --profile ${td-profile} --workspace --manifest-path ${PROJECT_RS_TY_EXPANSIONS_CARGO_TOML} --lib --bins --examples

    cd ${PROJECT_RS_TY_EXPANSIONS_FOLDER}/modules/ty-tableframe

    debug "üöÄ cargo %{td-toolchain-token}%{td-toolchain} run --locked --profile ${td-profile} --manifest-path ${PROJECT_RS_TY_EXPANSIONS_FOLDER}/modules/ty-tableframe/Cargo.toml --features without-polars-alloc --bin pystubs"
    exec --fail-on-error cargo %{td-toolchain-token}%{td-toolchain} run --locked --profile ${td-profile} --manifest-path ${PROJECT_RS_TY_EXPANSIONS_FOLDER}/modules/ty-tableframe/Cargo.toml --features without-polars-alloc --bin pystubs
    ''']

[tasks.link_all_rs_expansions]
category = "03 - Build"
private = true
run_task = [
    { name = [
        "link_all_ty-tableframe"
    ] }
]

[tasks.link_all_ty-tableframe]
category = "03 - Build"
private = true
run_task = [
    { name = [
        "link_ty-tableframe",
    ] }
]

[tasks.build_none_rs]
category = "03 - Build"
private = true
run_task = [
    { name = [
        "build_none_rs_macros",
        "build_none_rs_modules",
        "build_none_rs_expansions"
    ] }
]

[tasks.build_none_rs_macros]
category = "03 - Build"
private = true
cwd = "${PROJECT_TABSDATA_ROOT_FOLDER}"
script_runner = "@duckscript"
script = [
    '''
    !include_files ./make/libraries/log.ds

    debug "üöÄ ${td-cargo} %{td-toolchain-token}%{td-toolchain} build --locked %{td-target-token} %{td-target} --profile ${td-profile} --workspace --manifest-path ${PROJECT_RS_TD_MACROS_CARGO_TOML} --lib --bins"
    exec --fail-on-error ${td-cargo} %{td-toolchain-token}%{td-toolchain} build --locked %{td-target-token} %{td-target} --profile ${td-profile} --workspace --manifest-path ${PROJECT_RS_TD_MACROS_CARGO_TOML} --lib --bins
    ''']

[tasks.build_none_rs_modules]
category = "03 - Build"
private = true
cwd = "${PROJECT_TABSDATA_ROOT_FOLDER}"
script_runner = "@duckscript"
script = [
    '''
    !include_files ./make/libraries/log.ds

    debug "üöÄ ${td-cargo} %{td-toolchain-token}%{td-toolchain} build --locked %{td-target-token} %{td-target} --profile ${td-profile} --workspace --manifest-path ${PROJECT_RS_TABSDATA_CARGO_TOML} --lib --bins"
    exec --fail-on-error ${td-cargo} %{td-toolchain-token}%{td-toolchain} build --locked %{td-target-token} %{td-target} --profile ${td-profile} --workspace --manifest-path ${PROJECT_RS_TABSDATA_CARGO_TOML} --lib --bins
    ''']

[tasks.build_none_rs_expansions]
category = "03 - Build"
private = true
run_task = [
    { name = [
        "clean_rs_expansions",
        "compile_none_rs_expansions",
        "link_none_rs_expansions"
    ] }
]

[tasks.compile_none_rs_expansions]
category = "03 - Build"
private = true
cwd = "${PROJECT_TABSDATA_ROOT_FOLDER}"
script_runner = "@duckscript"
script = [
    '''
    !include_files ./make/libraries/log.ds

    debug "üöÄ cargo %{td-toolchain-token}%{td-toolchain} build --locked --profile ${td-profile} --workspace --manifest-path ${PROJECT_RS_TY_EXPANSIONS_CARGO_TOML} --lib --bins"
    exec --fail-on-error cargo %{td-toolchain-token}%{td-toolchain} build --locked --profile ${td-profile} --workspace --manifest-path ${PROJECT_RS_TY_EXPANSIONS_CARGO_TOML} --lib --bins

    cd ${PROJECT_RS_TY_EXPANSIONS_FOLDER}/modules/ty-tableframe

    debug "üöÄ cargo %{td-toolchain-token}%{td-toolchain} run --locked --profile ${td-profile} ---manifest-path ${PROJECT_RS_TY_EXPANSIONS_FOLDER}/modules/ty-tableframe/Cargo.toml --features without-polars-alloc --bin pystubs"
    exec --fail-on-error cargo %{td-toolchain-token}%{td-toolchain} run --locked --profile ${td-profile} --manifest-path ${PROJECT_RS_TY_EXPANSIONS_FOLDER}/modules/ty-tableframe/Cargo.toml --features without-polars-alloc --bin pystubs
    ''']

[tasks.link_none_rs_expansions]
category = "03 - Build"
private = true
run_task = [
    { name = [
        "link_none_ty-tableframe"
    ] }
]

[tasks.link_none_ty-tableframe]
category = "03 - Build"
private = true
run_task = [
    { name = [
        "link_ty-tableframe",
    ] }
]

[tasks.link_ty-tableframe]
category = "03 - Build"
private = true
cwd = "${PROJECT_TABSDATA_ROOT_FOLDER}"
script_runner = "@duckscript"
script = [
    '''
    !include_files ./make/libraries/log.ds

    cd "${PROJECT_RS_TY_EXPANSIONS_FOLDER}/modules/ty-tableframe"

    td_target = get_env TD_TARGET
    is_x86_64-unknown-linux-musl = eq ${td_target} "x86_64-unknown-linux-musl"
    if ${is_x86_64-unknown-linux-musl}

        ## ‚≠ïÔ∏è Former Implementation (Container Based)

        ## info "üöÄ cd ${PROJECT_TABSDATA_ROOT_FOLDER}"
        ## cd ${PROJECT_TABSDATA_ROOT_FOLDER}

        ## td_profile = set ${td-profile}

        ## td_script = set "apk add --no-cache perl"
        ## td_script = set "${td_script} && curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain 1.89.0"
        ## td_script = set "${td_script} && . $HOME/.cargo/env"
        ## td_script = set "${td_script} && rustup target add x86_64-unknown-linux-musl"
        ## td_script = set "${td_script} && python3.12 -m pip install --upgrade pip"
        ## td_script = set "${td_script} && python3.12 -m pip install maturin[patchelf]==1.9.3 --root-user-action=ignore"
        ## td_script = set "${td_script} && python3.12 -m pip --version"
        ## td_script = set "${td_script} && export OPENSSL_STATIC=1"
        ## td_script = set "${td_script} && export PKG_CONFIG_ALL_STATIC=1"
        ## td_script = set "${td_script} && export ZLIB_STATIC=1"
        ## td_script = set "${td_script} && export RUSTFLAGS='-C link-arg=-static-libgcc -C link-arg=-static-libstdc++'"
        ## td_script = set "${td_script} && python3.12 --version"
        ## td_script = set "${td_script} && python3.12 -m pip --version"
        ## td_script = set "${td_script} && rustc --version"
        ## td_script = set "${td_script} && cargo --version"
        ## td_script = set "${td_script} && python3.12 -m maturin --version"
        ## td_script = set "${td_script} && patchelf --version"
        ## td_script = set "${td_script} && python3.12 -m maturin build --locked --compatibility musllinux_1_1 --target x86_64-unknown-linux-musl --profile ${TD_PROFILE} --manifest-path /tabsdata/expansions/polars/modules/ty-tableframe/Cargo.toml --features extension-module"
        ## exec --fail-on-error docker run --platform linux/amd64 --rm -v --mount=type=bind,src=${PROJECT_TABSDATA_ROOT_FOLDER},target=/tabsdata -w /tabsdata --env TD_PROFILE=${td_profile} quay.io/pypa/musllinux_1_1_x86_64 bash -lc "${td_script}"

        ## info "üöÄ sudo chown -R ${USER}:${USER} ${PROJECT_TABSDATA_ROOT_FOLDER}/expansions/polars/target"
        ## exec --fail-on-error sudo chown -R ${USER}:${USER} ${PROJECT_TABSDATA_ROOT_FOLDER}/expansions/polars/target

        ## info "üöÄ cd ${PROJECT_RS_TY_EXPANSIONS_FOLDER}/modules/ty-tableframe"
        ## cd "${PROJECT_RS_TY_EXPANSIONS_FOLDER}/modules/ty-tableframe"


        ## ‚ùå Former Implementation (Image Based)

        ## info "üöÄ cd ${PROJECT_TABSDATA_ROOT_FOLDER}"
        ## cd ${PROJECT_TABSDATA_ROOT_FOLDER}

        ## td_profile = set ${td-profile}

        ## info "üöÄ docker build -f expansions/docker/linux_x86_64/Dockerfile -t tabsdata/x86_64-unknown-linux-musl:main ."
        ## exec --fail-on-error docker build -f expansions/docker/linux_x86_64/Dockerfile -t tabsdata/x86_64-unknown-linux-musl:main .

        ## info "üöÄ docker run --rm --mount=type=bind,src=${PROJECT_TABSDATA_ROOT_FOLDER},target=/tabsdata -w /tabsdata tabsdata/x86_64-unknown-linux-musl:main maturin build --locked %{td-target-token} %{td-target} --profile ${td-profile} --manifest-path /tabsdata/expansions/polars/modules/ty-tableframe/Cargo.toml --features extension-module"
        ## exec --fail-on-error docker run --rm --mount=type=bind,src=${PROJECT_TABSDATA_ROOT_FOLDER},target=/tabsdata -w /tabsdata tabsdata/x86_64-unknown-linux-musl:main maturin build --locked %{td-target-token} %{td-target} --profile ${td-profile} --manifest-path /tabsdata/expansions/polars/modules/ty-tableframe/Cargo.toml --features extension-module

        ## info "üöÄ sudo chown -R ${USER}:${USER} ${PROJECT_TABSDATA_ROOT_FOLDER}/expansions/polars/target"
        ## exec --fail-on-error sudo chown -R ${USER}:${USER} ${PROJECT_TABSDATA_ROOT_FOLDER}/expansions/polars/target

        ## info "üöÄ cd ${PROJECT_RS_TY_EXPANSIONS_FOLDER}/modules/ty-tableframe"
        ## cd "${PROJECT_RS_TY_EXPANSIONS_FOLDER}/modules/ty-tableframe"


        ## ‚úÖ Current Implementation

        info "üöÄ cd ${PROJECT_TABSDATA_ROOT_FOLDER}"
        cd ${PROJECT_TABSDATA_ROOT_FOLDER}

        td_profile = set ${td-profile}

        info "üöÄ docker run --rm --mount=type=bind,src=${PROJECT_TABSDATA_ROOT_FOLDER},target=/tabsdata -w /tabsdata --env TD_PROFILE=${td_profile} quay.io/pypa/manylinux2014_x86_64 bash -lc ..."
        td_script = set "yum -y install perl perl-IPC-Cmd"
        td_script = set "${td_script} && curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain 1.89.0"
        td_script = set "${td_script} && . $HOME/.cargo/env"
        td_script = set "${td_script} && python3.12 -m pip install --upgrade pip"
        td_script = set "${td_script} && python3.12 -m pip install maturin[patchelf]==1.9.3 --root-user-action=ignore"
        td_script = set "${td_script} && export OPENSSL_STATIC=1"
        td_script = set "${td_script} && export PKG_CONFIG_ALL_STATIC=1"
        td_script = set "${td_script} && export ZLIB_STATIC=1"
        td_script = set "${td_script} && export RUSTFLAGS='-C link-arg=-static-libgcc -C link-arg=-static-libstdc++'"
        td_script = set "${td_script} && python3.12 --version"
        td_script = set "${td_script} && python3.12 -m pip --version"
        td_script = set "${td_script} && rustc --version"
        td_script = set "${td_script} && cargo --version"
        td_script = set "${td_script} && python3.12 -m maturin --version"
        td_script = set "${td_script} && patchelf --version"
        td_script = set "${td_script} && python3.12 -m maturin build --locked --compatibility manylinux2014 --profile ${td-profile} --manifest-path /tabsdata/expansions/polars/modules/ty-tableframe/Cargo.toml --features extension-module"
        exec --fail-on-error docker run --platform linux/amd64 --rm --mount=type=bind,src=${PROJECT_TABSDATA_ROOT_FOLDER},target=/tabsdata -w /tabsdata --env TD_PROFILE=${td_profile} quay.io/pypa/manylinux2014_x86_64 bash -lc "${td_script}"

        info "üöÄ sudo chown -R ${USER}:${USER} ${PROJECT_TABSDATA_ROOT_FOLDER}/expansions/polars/target"
        exec --fail-on-error sudo chown -R ${USER}:${USER} ${PROJECT_TABSDATA_ROOT_FOLDER}/expansions/polars/target

        info "üöÄ cd ${PROJECT_RS_TY_EXPANSIONS_FOLDER}/modules/ty-tableframe"
        cd "${PROJECT_RS_TY_EXPANSIONS_FOLDER}/modules/ty-tableframe"
    else
        info "üöÄ maturin build --locked %{td-target-token} %{td-target} --profile ${td-profile} --features extension-module"
        exec --fail-on-error maturin build --locked %{td-target-token} %{td-target} --profile ${td-profile} --features extension-module
    end

    info "‚è≥ Extracting maturin wheel to python source folder..."
    wheels = glob_array ../../target/wheels/*.whl
    q_wheels = array_length ${wheels}
    if eq ${q_wheels} 0
        error "‚ö†Ô∏è No maturin wheels found in ../../target/wheels/"
        exit 1
    else
        if eq ${q_wheels} 1
            for wheel in ${wheels}
                info "üì¶ Found wheel: ${wheel}"
                # exec --fail-on-error wheel2json ${wheel}
                if is_directory ../../target/wheels/wheel.tmp
                    trace "üßπ Removing existing ../../target/wheels/wheel.tmp directory..."
                    rm -r ../../target/wheels/wheel.tmp
                end
                exec --fail-on-error python -m zipfile -e ${wheel} ../../target/wheels/wheel.tmp

                trace "üìÇ Listing of wheel.tmp:"
                wheel_items = glob_array ../../target/wheels/wheel.tmp/**/*
                for wheel_item in ${wheel_items}
                    trace "   - ${wheel_item}"
                end
                for wheel_item in ${wheel_items}
                    if is_directory ${wheel_item}
                        if ends_with ${wheel_item} ".dist-info"
                            wheel_files = glob_array ${wheel_item}/**/*
                            for wheel_file in ${wheel_files}
                                if is_file ${wheel_file}
                                    trace "üìù Contents of wheel.tmp .dist-info folder file ${wheel_file}..."
                                    trace ">>>>> >>>>> >>>>> >>>>> >>>>>"
                                    # cat ${wheel_file}
                                    trace "<<<<< <<<<< <<<<< <<<<< <<<<<"
                                end
                            end
                        end
                    end
                end

                if is_directory "../../target/wheels/wheel.tmp/tabsdata"
                    trace "üìÅ Copying tabsdata module to python/"
                    td_symlink_polars_libs_pytest = get_env TD_SYMLINK_POLARS_LIBS_PYTEST
                    os = os_family
                    if eq ${os} "mac"
                        if eq ${td_symlink_polars_libs_pytest} "true"
                            info "üçÑ macOS + TD_SYMLINK_POLARS_LIBS=true ‚Üí Using symbolic links to reduce space of local packages"
                            info "üöÄ python ${SYMLINK_SO_PY} ../../target/wheels/wheel.tmp/tabsdata python/ true"
                            exec --fail-on-error python ${SYMLINK_SO_PY} ../../target/wheels/wheel.tmp/tabsdata python/tabsdata true
                        else
                            info "üëÄ macOS + TD_SYMLINK_POLARS_LIBS=false ‚Üí Using regular copy"
                            info "üöÄ python ${SYMLINK_SO_PY} ../../target/wheels/wheel.tmp/tabsdata python/ false"
                            exec --fail-on-error python ${SYMLINK_SO_PY} ../../target/wheels/wheel.tmp/tabsdata python/tabsdata false
                        end
                    else
                        info "üß© Non macOS ‚Üí Using regular copy"
                        info "üöÄ python ${SYMLINK_SO_PY} ../../target/wheels/wheel.tmp/tabsdata python/ false"
                        exec --fail-on-error python ${SYMLINK_SO_PY} ../../target/wheels/wheel.tmp/tabsdata python/tabsdata false
                    end
                else
                    error "‚ö†Ô∏è tabsdata module not found in wheel extraction: ${wheel}"
                    exit 1
                end

                if is_directory "../../target/wheels/wheel.tmp/tabsdata.libs"
                    trace "üìÅ Copying tabsdata.libs folder to python/"
                    exec --fail-on-error cp -r ../../target/wheels/wheel.tmp/tabsdata.libs python/
                else
                    trace "üìå tabsdata.libs folder not found in wheel extraction: ${wheel}"
                end

                # rm -r ../../target/wheels/wheel.tmp
                trace "üêç Successfully extracted wheel contents!"
            end
        else
            error "‚ö†Ô∏è More than one maturin wheel found in ../../target/wheels/"
            for wheel in ${wheels}
                error "‚ö†Ô∏è üì¶ Found wheel: ${wheel}"
            end
            exit 1
        end
    end
    ''']

[tasks.link_rs]
category = "03 - Build"
description = "Task 'link' for Rust projects"
run_task = [
    { name = [
        "link_all_rs",
        "link_none_rs"], condition = { env = { "TD_BUILD_ALL" = "true" } } },
    { name = [
        "link_none_rs"
    ] }
]

[tasks.link_all_rs]
category = "03 - Build"
private = true
run_task = [
    { name = [
        "link_all_rs_expansions"
    ] }
]

[tasks.link_none_rs]
category = "03 - Build"
private = true
run_task = [
    { name = [
        "link_none_rs_expansions"
    ] }
]

[tasks.egg_rs]
category = "03 - Build"
description = "Task 'egg' for Rust projects"
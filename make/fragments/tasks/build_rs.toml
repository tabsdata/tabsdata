#
# Copyright 2025 Tabs Data Inc.
#

[tasks.build_rs]
category = "03 - Build"
description = "Task 'build' for Rust projects"
run_task = [
    { name = [
        "build_all_rs",
        "build_none_rs"], condition = { env = { "TD_BUILD_ALL" = "true" } } },
    { name = [
        "build_none_rs"
    ] }
]

[tasks.build_all_rs]
category = "03 - Build"
private = true
run_task = [
    { name = [
        "build_all_rs_macros",
        "build_all_rs_modules",
        "build_all_rs_expansions"
    ] }
]

[tasks.build_all_rs_macros]
category = "03 - Build"
private = true
cwd = "${PROJECT_TABSDATA_ROOT_FOLDER}"
script_runner = "@duckscript"
script = [
    '''
    !include_files ./make/libraries/log.ds

    debug "üöÄ ${td-cargo} %{td-toolchain-token}%{td-toolchain} build --locked %{td-target-token} %{td-target} --profile ${td-profile} --workspace --manifest-path ${PROJECT_RS_TD_MACROS_CARGO_TOML} --all-features --lib --bins --examples"
    exec --fail-on-error ${td-cargo} %{td-toolchain-token}%{td-toolchain} build --locked %{td-target-token} %{td-target} --profile ${td-profile} --workspace --manifest-path ${PROJECT_RS_TD_MACROS_CARGO_TOML} --all-features --lib --bins --examples
    ''']

[tasks.build_all_rs_modules]
category = "03 - Build"
private = true
cwd = "${PROJECT_TABSDATA_ROOT_FOLDER}"
script_runner = "@duckscript"
script = [
    '''
    !include_files ./make/libraries/log.ds

    debug "üöÄ ${td-cargo} %{td-toolchain-token}%{td-toolchain} build --locked %{td-target-token} %{td-target} --profile ${td-profile} --workspace --manifest-path ${PROJECT_RS_TABSDATA_CARGO_TOML} --all-features --lib --bins --examples"
    exec --fail-on-error ${td-cargo} %{td-toolchain-token}%{td-toolchain} build --locked %{td-target-token} %{td-target} --profile ${td-profile} --workspace --manifest-path ${PROJECT_RS_TABSDATA_CARGO_TOML} --all-features --lib --bins --examples
    ''']

[tasks.build_all_rs_expansions]
category = "03 - Build"
private = true
run_task = [
    { name = [
        "clean_rs_expansions",
        "compile_all_rs_expansions",
        "link_all_rs_expansions"
    ] }
]

[tasks.compile_all_rs_expansions]
category = "03 - Build"
private = true
cwd = "${PROJECT_TABSDATA_ROOT_FOLDER}"
script_runner = "@duckscript"
script = [
    '''
    !include_files ./make/libraries/log.ds

    debug "üöÄ cargo %{td-toolchain-token}%{td-toolchain} build --locked --profile ${td-profile} --workspace --manifest-path ${PROJECT_RS_TY_EXPANSIONS_CARGO_TOML} --lib --bins --examples"
    exec --fail-on-error cargo %{td-toolchain-token}%{td-toolchain} build --locked --profile ${td-profile} --workspace --manifest-path ${PROJECT_RS_TY_EXPANSIONS_CARGO_TOML} --lib --bins --examples
    ''']

[tasks.link_all_rs_expansions]
category = "03 - Build"
private = true
run_task = [
    { name = [
        "link_all_ty-tableframe"
    ] }
]

[tasks.link_all_ty-tableframe]
category = "03 - Build"
private = true
cwd = "${PROJECT_TABSDATA_ROOT_FOLDER}"
script_runner = "@duckscript"
script = [
    '''
    !include_files ./make/libraries/log.ds

    cd "${PROJECT_RS_TY_EXPANSIONS_FOLDER}/modules/ty-tableframe"

    td_target = get_env TD_TARGET
    is_x86_64-unknown-linux-musl = eq ${td_target} "x86_64-unknown-linux-musl"
    if ${is_x86_64-unknown-linux-musl}
        info "üöÄ cd ${PROJECT_TABSDATA_ROOT_FOLDER}"
        cd ${PROJECT_TABSDATA_ROOT_FOLDER}

        info "üöÄ docker build -f expansions/docker/linux_x86_64/Dockerfile -t tabsdata/x86_64-unknown-linux-musl:main ."
        exec --fail-on-error docker build -f expansions/docker/linux_x86_64/Dockerfile -t tabsdata/x86_64-unknown-linux-musl:main .

        info "üöÄ docker run --rm --mount=type=bind,src=${PROJECT_TABSDATA_ROOT_FOLDER},target=/tabsdata -w /tabsdata tabsdata/x86_64-unknown-linux-musl:main maturin build --locked %{td-target-token} %{td-target} --profile ${td-profile} --manifest-path /tabsdata/expansions/polars/modules/ty-tableframe/Cargo.toml --features extension-module"
        exec --fail-on-error docker run --rm --mount=type=bind,src=${PROJECT_TABSDATA_ROOT_FOLDER},target=/tabsdata -w /tabsdata tabsdata/x86_64-unknown-linux-musl:main maturin build --locked %{td-target-token} %{td-target} --profile ${td-profile} --manifest-path /tabsdata/expansions/polars/modules/ty-tableframe/Cargo.toml --features extension-module

        info "üöÄ sudo chown -R ${USER}:${USER} ${PROJECT_TABSDATA_ROOT_FOLDER}/expansions/polars/target"
        exec --fail-on-error sudo chown -R ${USER}:${USER} ${PROJECT_TABSDATA_ROOT_FOLDER}/expansions/polars/target

        info "üöÄ cd ${PROJECT_RS_TY_EXPANSIONS_FOLDER}/modules/ty-tableframe"
        cd "${PROJECT_RS_TY_EXPANSIONS_FOLDER}/modules/ty-tableframe"
    else
        info "üöÄ maturin build --locked %{td-target-token} %{td-target} --profile ${td-profile} --features extension-module"
        exec --fail-on-error maturin build --locked %{td-target-token} %{td-target} --profile ${td-profile} --features extension-module
    end

    debug "‚è≥ Extracting maturin wheel to python source folder..."
    wheels = glob_array ../../target/wheels/*.whl
    q_wheels = array_length ${wheels}
    if eq ${q_wheels} 0
        error "‚ö†Ô∏è No maturin wheels found in ../../target/wheels/"
        exit 1
    else
        if eq ${q_wheels} 1
            for wheel in ${wheels}
                debug "üì¶ Found wheel: ${wheel}"
                if is_directory ../../target/wheels/wheel.tmp
                    debug "üßπ Removing existing ../../target/wheels/wheel.tmp directory..."
                    rm -r ../../target/wheels/wheel.tmp
                end
                exec --fail-on-error python -m zipfile -e ${wheel} ../../target/wheels/wheel.tmp
                if is_directory "../../target/wheels/wheel.tmp/tabsdata"
                    debug "üìÅ Copying tabsdata module to python/"
                    exec --fail-on-error cp -r ../../target/wheels/wheel.tmp/tabsdata python/
                else
                    error "‚ö†Ô∏è tabsdata module not found in wheel extraction: ${wheel}"
                    exit 1
                end
                rm -r ../../target/wheels/wheel.tmp
                debug "üêç Successfully extracted wheel contents!"
            end
        else
            error "‚ö†Ô∏è More than one maturin wheel found in ../../target/wheels/"
            for wheel in ${wheels}
                error "‚ö†Ô∏è üì¶ Found wheel: ${wheel}"
            end
            exit 1
        end
    end
    ''']

[tasks.build_none_rs]
category = "03 - Build"
private = true
run_task = [
    { name = [
        "build_none_rs_macros",
        "build_none_rs_modules",
        "build_none_rs_expansions"
    ] }
]

[tasks.build_none_rs_macros]
category = "03 - Build"
private = true
cwd = "${PROJECT_TABSDATA_ROOT_FOLDER}"
script_runner = "@duckscript"
script = [
    '''
    !include_files ./make/libraries/log.ds

    debug "üöÄ ${td-cargo} %{td-toolchain-token}%{td-toolchain} build --locked %{td-target-token} %{td-target} --profile ${td-profile} --workspace --manifest-path ${PROJECT_RS_TD_MACROS_CARGO_TOML} --lib --bins"
    exec --fail-on-error ${td-cargo} %{td-toolchain-token}%{td-toolchain} build --locked %{td-target-token} %{td-target} --profile ${td-profile} --workspace --manifest-path ${PROJECT_RS_TD_MACROS_CARGO_TOML} --lib --bins
    ''']

[tasks.build_none_rs_modules]
category = "03 - Build"
private = true
cwd = "${PROJECT_TABSDATA_ROOT_FOLDER}"
script_runner = "@duckscript"
script = [
    '''
    !include_files ./make/libraries/log.ds

    debug "üöÄ ${td-cargo} %{td-toolchain-token}%{td-toolchain} build --locked %{td-target-token} %{td-target} --profile ${td-profile} --workspace --manifest-path ${PROJECT_RS_TABSDATA_CARGO_TOML} --lib --bins"
    exec --fail-on-error ${td-cargo} %{td-toolchain-token}%{td-toolchain} build --locked %{td-target-token} %{td-target} --profile ${td-profile} --workspace --manifest-path ${PROJECT_RS_TABSDATA_CARGO_TOML} --lib --bins
    ''']

[tasks.build_none_rs_expansions]
category = "03 - Build"
private = true
run_task = [
    { name = [
        "clean_rs_expansions",
        "compile_none_rs_expansions",
        "link_none_rs_expansions"
    ] }
]

[tasks.compile_none_rs_expansions]
category = "03 - Build"
private = true
cwd = "${PROJECT_TABSDATA_ROOT_FOLDER}"
script_runner = "@duckscript"
script = [
    '''
    !include_files ./make/libraries/log.ds

    debug "üöÄ cargo %{td-toolchain-token}%{td-toolchain} build --locked --profile ${td-profile} --workspace --manifest-path ${PROJECT_RS_TY_EXPANSIONS_CARGO_TOML} --lib --bins"
    exec --fail-on-error cargo %{td-toolchain-token}%{td-toolchain} build --locked --profile ${td-profile} --workspace --manifest-path ${PROJECT_RS_TY_EXPANSIONS_CARGO_TOML} --lib --bins
    ''']

[tasks.link_none_rs_expansions]
category = "03 - Build"
private = true
run_task = [
    { name = [
        "link_none_ty-tableframe"
    ] }
]

[tasks.link_none_ty-tableframe]
category = "03 - Build"
private = true
cwd = "${PROJECT_TABSDATA_ROOT_FOLDER}"
script_runner = "@duckscript"
script = [
    '''
    !include_files ./make/libraries/log.ds

    cd "${PROJECT_RS_TY_EXPANSIONS_FOLDER}/modules/ty-tableframe"

    td_target = get_env TD_TARGET
    is_x86_64-unknown-linux-musl = eq ${td_target} "x86_64-unknown-linux-musl"
    if ${is_x86_64-unknown-linux-musl}
        info "üöÄ cd ${PROJECT_TABSDATA_ROOT_FOLDER}"
        cd ${PROJECT_TABSDATA_ROOT_FOLDER}

        info "üöÄ docker build -f expansions/docker/linux_x86_64/Dockerfile -t tabsdata/x86_64-unknown-linux-musl:main ."
        exec --fail-on-error docker build -f expansions/docker/linux_x86_64/Dockerfile -t tabsdata/x86_64-unknown-linux-musl:main .

        info "üöÄ docker run --rm --mount=type=bind,src=${PROJECT_TABSDATA_ROOT_FOLDER},target=/tabsdata -w /tabsdata tabsdata/x86_64-unknown-linux-musl:main maturin build --locked %{td-target-token} %{td-target} --profile ${td-profile} --manifest-path /tabsdata/expansions/polars/modules/ty-tableframe/Cargo.toml --features extension-module"
        exec --fail-on-error docker run --rm --mount=type=bind,src=${PROJECT_TABSDATA_ROOT_FOLDER},target=/tabsdata -w /tabsdata tabsdata/x86_64-unknown-linux-musl:main maturin build --locked %{td-target-token} %{td-target} --profile ${td-profile} --manifest-path /tabsdata/expansions/polars/modules/ty-tableframe/Cargo.toml --features extension-module

        info "üöÄ sudo chown -R ${USER}:${USER} ${PROJECT_TABSDATA_ROOT_FOLDER}/expansions/polars/target"
        exec --fail-on-error sudo chown -R ${USER}:${USER} ${PROJECT_TABSDATA_ROOT_FOLDER}/expansions/polars/target

        info "üöÄ cd ${PROJECT_RS_TY_EXPANSIONS_FOLDER}/modules/ty-tableframe"
        cd "${PROJECT_RS_TY_EXPANSIONS_FOLDER}/modules/ty-tableframe"
    else
        info "üöÄ maturin build --locked %{td-target-token} %{td-target} --profile ${td-profile} --features extension-module"
        exec --fail-on-error maturin build --locked %{td-target-token} %{td-target} --profile ${td-profile} --features extension-module
    end

    debug "‚è≥ Extracting maturin wheel to python source folder..."
    wheels = glob_array ../../target/wheels/*.whl
    q_wheels = array_length ${wheels}
    if eq ${q_wheels} 0
        error "‚ö†Ô∏è No maturin wheels found in ../../target/wheels/"
        exit 1
    else
        if eq ${q_wheels} 1
            for wheel in ${wheels}
                debug "üì¶ Found wheel: ${wheel}"
                if is_directory ../../target/wheels/wheel.tmp
                    debug "üßπ Removing existing ../../target/wheels/wheel.tmp directory..."
                    rm -r ../../target/wheels/wheel.tmp
                end
                exec --fail-on-error python -m zipfile -e ${wheel} ../../target/wheels/wheel.tmp
                if is_directory "../../target/wheels/wheel.tmp/tabsdata"
                    debug "üìÅ Copying tabsdata module to python/"
                    exec --fail-on-error cp -r ../../target/wheels/wheel.tmp/tabsdata python/
                else
                    error "‚ö†Ô∏è tabsdata module not found in wheel extraction: ${wheel}"
                    exit 1
                end
                rm -r ../../target/wheels/wheel.tmp
                debug "üêç Successfully extracted wheel contents!"
            end
        else
            error "‚ö†Ô∏è More than one maturin wheel found in ../../target/wheels/"
            for wheel in ${wheels}
                error "‚ö†Ô∏è üì¶ Found wheel: ${wheel}"
            end
            exit 1
        end
    end
    ''']